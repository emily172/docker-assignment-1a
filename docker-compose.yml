networks: 
  mongodb-network: 
  mongodb-ex-network:
  redis-network:

services:
  api:
    image: doconnor/movies-api:1.0
    container_name: movies-api
    restart: always
    ports:
      - '9000:9000'
    environment:
      - MONGODB_URI=mongodb://admin:secret@database:27017
      - REDIS_URI=redis://redis
      - ENABLE_WRITING_HANDLERS=false
    profiles:
      - dev
      - prod
    networks:
      - redis-network
      - mongodb-network
    depends_on:
      - database
      - redis

  database:
    container_name: mongoDB
    image: mongo:8.0-rc
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=secret
    networks:
      - mongodb-network
      - mongodb-ex-network
    volumes:
      - moviedata:/data/db
      - ./seeding.json:/docker-entrypoint-initdb.d/seeding.json
    command: mongod --bind_ip_all --auth; mongo import --host database --db tmdb_movies --authenticationDatabase admin --username admin --password secret --drop --jsonArray --file /docker-entrypoint-initdb.d/seeding.json
    profiles:
      - dev
      - prod

  redis:
    image: redis:alpine 
    container_name: redis
    ports:
      - "6379:6379"
    networks: 
      - redis-network
    profiles:
      - dev
      - prod

  mongo-express:
    container_name: express
    image: mongo-express:1.0-20-alpine3.19
    restart: always
    ports:
      - '8080:8081'
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=secret
      - ME_CONFIG_MONGODB_SERVER=database
    profiles:
      - dev
    networks: 
      - redis-network
      - mongodb-ex-network
    depends_on:
      - database

volumes:
  moviedata:
